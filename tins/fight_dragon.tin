#read tins/combat.tin;
#read tins/default.tin;
#format filename {logs/fight_dragon_log_%s_%t.txt} {$login_id} {%Y-%m-%d};
#log append {$filename};

#class fight_dragon open

#nop ######## settings below ###########
#var auto_reconnect {0}
#var dragons_to_fight {4}
#var heal_dragon {0}

#var weapon_for_fight {}
#var weapon_for_practice {}
#var learn_skills {0}
#var skill_to_learn {}
#var skill_to_learn2 {}
#var master {cong}
#var abandon_skills {0}
#var target_skill_level {999}

#var fight_enables {}

#var path_from_fight_to_reset {}
#var path_from_reset_to_fight {}

#var path_from_fight_to_eat {}
#var path_from_eat_to_fight {}

#var path_from_fight_to_master {}
#var path_from_master_to_fight {}

#var path_one_step_move {}
#var path_one_step_back {}
#nop ######## settings above ###########

#format filename_settings {settings/fight_dragon_%s.settings.tin} {$login_id};
#read $filename_settings;

#var previous_wx {0}
#var previous_qn {-1}

#action {{XYJ RECONNECTION DONE.|XYJ NEW CONNECTION ESTABLISHED.}} {
	stop;
	#delay 2 {start;};
}

#alias start {
	#echo {<fff> 请确认各技能！};
	#echo {<fff> 请确认各技能！};
	hp;
	start_setup;
	reset_idle_prevention_ticker;
}

#alias reset_idle_prevention_ticker {
	#tick fight_dragon_idle_prevention {
		#showme {LOOKS LIKE YOU HAVE BEEN IDLING FOR A WHILE?};
	} {600};
}

#action {^LOOKS LIKE YOU HAVE BEEN IDLING FOR A WHILE?} {stop;#delay 5 {start};}

#action {^忽然一阵黄风呼啸而来，你身不由己被卷了进去！} {
	stop;
	#delay 5 {get_out_from_shelita};
}
#action {(%1)告诉你：report} {
	#script {foo} {python scripts/report.py 'fight_dragon' '$login_id'};
	#var status_report $foo[1];
	#if {"$skill_to_learn" == ""} {
		tell %1 $status_report目前武学$current_wx, 潜能$current_qn, 正未学习技能。;
	}; #else {
		tell %1 $status_report目前武学$current_wx, 潜能$current_qn, 正学习技能：$skill_to_learn。;
	};	
}

#action {^SUCCESSFULLY GOT OUT FROM SHELITA.} {
	#delay 5 {relocate};
}

#alias reset {
	stop;
	treload fight_dragon_$login_id;
	hp;
	start_fight;
}

#alias stop {
	tkill fight_dragon_fight_inner;
	tkill fight_dragon_setup_inner;
	tkill fight_dragon_cast_inner;
	tkill fight_dragon_move_inner;
	tkill fight_dragon_learn_inner;
	tkill fight_dragon_practice_inner;
	#untick fight_dragon;
	#untick practice_tick;
	reset_idle_prevention_ticker;
}


#alias start_setup {
	#class fight_dragon_setup_inner open;
	#action {^RELOCATED TO STONE SUCCESSFULLY.} {
		check_hp_status;
	};
	
	#alias {check_hp_status} {hp;set brief check_hp_status;};
	
	#action {设定环境变数%*check_hp_status} {
		#if {$percent_hp < 95} {
			#3 exert heal;
		};
		#if {$current_nl_percent < 50 || $current_fl_percent < 50} {
			rec;
		}; #else {
			#SHOWME {<fff>RECOVERY FINISHED.}
		};
	};
	
	#action {RECOVERY FINISHED.} {
		check_weapons_for_fight;
	};
	
	#alias check_weapons_for_fight {
		#class check_weapons_inner_class open;
		#var num_weapons {0};
		#action {{^□|}%S%s(%*)} {
			#if {"%%%1" == "□"} {
				#format {weapon_wielding} {%l} {%%%4};
				#loop 1 5 cnt {unwield $weapon_wielding $cnt};
			};
		
			#if {"%%%2" == "桂树枝"} {
				#if {"$weapon_for_fight" == "sword"} {
					#math num_weapons {$num_weapons + 1};
				};
			};
			
			#if {"%%%2" == "竹耙"} {
				#if {"$weapon_for_fight" == "rake"} {
					#math num_weapons {$num_weapons + 1};
				};
			};
			
			#if {"%%%2" == "木叉"} {
				#if {"$weapon_for_fight" == "fork"} {
					#math num_weapons {$num_weapons + 1};
				};
			};
			#if {"%%%2" == "木棒"} {
				#if {"$weapon_for_fight" == "bang"} {
					#math num_weapons {$num_weapons + 1};
				};
			};
		};

		#action {设定环境变数%*check_weapons} {
			#if {"$weapon_for_fight" == ""} {
				#showme {CHECK WEAPON FOR PRACTICE PASSED.};
			}; #elseif {$num_weapons > 0} {
				#if {$num_weapons > 1} {
					#loop 2 $num_weapons cnt {drop $weapon_for_fight $cnt};
					#nop wield $weapon_for_fight;
				};
				#showme {CHECK WEAPON FOR FIGHT PASSED.};
			}; #else {
				#showme {CHECK WEAPON FOR FIGHT FAILED.};
			};
			#class check_weapons_inner_class kill;
		};
		#class check_weapons_inner_class close;
		i;
		set brief check_weapons;
	};
	
	#alias check_weapons_for_practice {
		#class check_weapons_inner_class open;
		#var num_weapons {0};
		#action {{^□|}%S%s(%*)} {
		
			#if {"%%%1" == "□"} {
				#format {weapon_wielding} {%l} {%%%3};
				unwield $weapon_wielding;
			};
			
			#if {"$weapon_for_practice" == "sword"} {
				#if {"%%%2" == "桂树枝" || "%%%2" == "铁剑"} {
					#math num_weapons {$num_weapons + 1};
					#loop 1 5 cnt {unwield $weapon_wielding $cnt};
				};
			};
					
			#if {"%%%4" == "Zhu pa"} {
				#if {"$weapon_for_practice" == "rake"} {
					#math num_weapons {$num_weapons + 1};
				};
			};
			
			#if {"%%%4" == "Fork"} {
				#if {"$weapon_for_practice" == "fork"} {
					#math num_weapons {$num_weapons + 1};
				};
			};
			#if {"%%%2" == "盘龙棍"} {
				#if {"$weapon_for_practice" == "bang"} {
					#math num_weapons {$num_weapons + 1};
				};
			};
		};
				
		#action {设定环境变数%*check_weapons} {
			#if {"$weapon_for_practice" == ""} {
				#showme {CHECK WEAPON FOR PRACTICE PASSED.};
			}; #elseif {$num_weapons > 0} {
				#if {$num_weapons > 1} {
					#loop 2 $num_weapons cnt {drop $weapon_for_practice $cnt};
					#nop wield $weapon_for_fight;
				};
				#showme {CHECK WEAPON FOR PRACTICE PASSED.};
			}; #else {
				#showme {CHECK WEAPON FOR PRACTICE FAILED.};
			};
			#class check_weapons_inner_class kill;
		};
		#class check_weapons_inner_class close;
		i;
		set brief check_weapons;
	};
	
	#action {CHECK WEAPON FOR FIGHT FAILED.} {go_buy_weapon_for_fight};
	#action {CHECK WEAPON FOR FIGHT PASSED.} {#delay 3 {check_weapons_for_practice};};
	#action {CHECK WEAPON FOR PRACTICE FAILED.} {go_buy_weapon_for_practice};
	#action {CHECK WEAPON FOR PRACTICE PASSED.} {
		#echo {<fff>武器检查完毕，开始打龙。};
		#var previous_wx {0};
		#var previous_qn {-1};
		$fight_enables;
		wield $weapon_for_fight;
		enforce 0;
		set brief_all;
		wimpy 40;
		fly changan;
		#6 s;
		e;
		nu;
		hd;
		l;
	};	
	
	
	#alias go_buy_weapon_for_fight {
		#if {"$weapon_for_fight" == "rake"} {
			fly tianzhu;#8 e;w;w;w;n;buy zhupa;s;unwield bang;unwield sword;unwield fork;
		}; #elseif {"$weapon_for_fight" == "sword"} {
			fly moon;get guishuzhi;unwield bang;unwield sword;unwield fork;
		}; elseif {"$weapon_for_practice" == "fork"} {
			fly changan;s;w;buy 木叉;#delay 3 {e};
		};
	};
	#alias go_buy_weapon_for_practice {
		#if {"$weapon_for_practice" == "rake"} {
			fly tianzhu;#8 e;w;w;w;n;buy zhupa;s;unwield bang;unwield sword;unwield fork;
		}; #elseif {"$weapon_for_practice" == "sword"} {
			fly changan;s;w;buy 铁剑;#delay 3 {e;};
		}; #elseif {"$weapon_for_practice" == "bang"} {
			fly changan;s;w;buy dragon stick;#delay 3 {e;};
		}; elseif {"$weapon_for_practice" == "fork"} {
			fly changan;s;w;buy 木叉;#delay 3 {e;};
		};
	};
	#action {{你的钱不够|你没有足够的钱}} {
		#delay 5 {
			fly changan;w;s;
			#delay 4 {withdraw 1 gold};
			#delay 8 {n;check_weapons_for_fight};
		};
	};
	#action {{^你捡起|^你附近没有这样东西|^当铺里没有这种货品}} {#delay 5 {check_weapons_for_fight;};};
	#action {^你向%S买} {#delay 5 {check_weapons_for_fight;};};
	#action {^守门人拦住了你：帮派总堂重地闲杂人免进，无帮派人士请去} {
		enforce 100;
		kill guard;
	};
	#action {^守门人死了。} {
		enforce 0;
		hd;
		l;
	};
	#action {^南天极 -} {enforce 0;kill hd guard;start_summon;};
	
	#action {^Failed to summon dragon.} {
		#delay 5 {l;};
	};
	#action {^Successfully summoned a dragon.} {
		enforce 0;
		#class fight_dragon_setup_inner kill;
		#delay 6 {
			$path_from_reset_to_fight;
			kill dragon;
			start_fight;
		};
	};
	#class fight_dragon_setup_inner close;
	relocate;
}

#alias start_summon {
	#class fight_dragon_cast_inner open;
	
	#action {^%?%?%?忽然狂风大做，半空现出一条%*龙来！} {
		#showme {Successfully summoned a dragon.};
		#class fight_dragon_cast_inner kill;
	};
	
	#action {^%?%?%?只有战斗中才能召唤护法。} {
		#showme {Failed to summon dragon. Not in fight.};
		#class fight_dragon_cast_inner kill;
	};
	
	#action {^%?%?%?你现在不能用魔法！} {
		#showme {Failed to summon dragon. Casting on cooldown.};
		#class fight_dragon_cast_inner kill;
	};
	
	#action {^%?%?%?你刚叫过护法，他们都被你叫烦了！} {
		#showme {Failed to summon dragon. Spell on cooldown.};
		#class fight_dragon_cast_inner kill;
	};
	
	#action {你的法力不够了！你的精神无法集中！} {
		#showme {Failed to summon dragon. Not enough mana.};
		#class fight_dragon_cast_inner kill;
	};

	#action {^%?%?%?%?你上一个动作还没有完成，不能念咒文。} {
		#showme {Failed to summon dragon. I am in busy.};
		#class fight_dragon_cast_inner kill;
	};
	
	#action {但是什么也没有发生。} {
		#showme {Failed to summon dragon. Invocation failed.};
		#class fight_dragon_cast_inner kill;
	};
	
	#class fight_dragon_cast_inner close;
	cast hufa;
}

#alias start_fight {
	#class fight_dragon_fight_inner open;
	#var count_dragon 0;
	#action {尸体%*Corpse} {#line {gag};};
	#action {骸骨%*Skeleton} {#line {gag};};
	
	#alias check_dragon_status {
		#var count_dragon 0;
		#var practice_needed 0;
		look;
		hp;
		skills;
		set brief check_dragon_number;
	};
	
	#alias turn_on_fight_dragon_tick {
		reset_idle_prevention_ticker;
		#tick fight_dragon {
			check_dragon_status;
		} {30};
	};

	#action {{^□|}%S%s(%S)%s-%*%d/%*} {
		#if {"%%4" == "$skill_to_learn"} {
			#var skill_to_upgrade_chinese %%2;
			#var current_skill_level %%7;
			#var current_skill_exp %%8;
			#MATH exp_to_next_level {($current_skill_level + 1 ) * ($current_skill_level + 1)};
			
			#if {$current_skill_exp <= $exp_to_next_level} {
				#var practice_needed {0};
			}; #elseif {$current_skill_exp > $exp_to_next_level} {
				#var practice_needed {1};
				#var skill_to_practice {$skill_to_learn};
				#var skill_to_practice_chinese {$skill_to_upgrade_chinese};
			}; 
		}; #elseif { "%%4" == "$skill_to_learn2"} {
			#nop ;
		}; #else {
			#line {gag};
		};
	};
	
	#action {你的「基本%*」进步了！} {
		#if {$abandon_skills == 1} {
			#if {"$weapon_for_fight" == "rake"} {abandon rake;abandon rake};
			#if {"$weapon_for_fight" == "sword"} {abandon sword;abandon sword};
			#if {"$weapon_for_fight" == "bang"} {abandon stick;abandon stick};
			#if {"$weapon_for_fight" == "fork"} {abandon fork;abandon fork};
		};
	};
	
	#action {^设定环境变数%*check_dragon_number} {
		#if {$current_hp_percent < 25} {
			#echo {气血过低，终止机器。};
			random;qq;
		}; #elseif {$count_dragon == 0} {
			stop;
			#delay 5 {
				start_setup;
			};
		}; #elseif {$current_drink < 200 || $current_food < 200} {
			$path_from_fight_to_eat;
			surrender;
			chi;
			$path_from_eat_to_fight;
			#loop 1 $count_dragon cnt {fight dragon $cnt;kill dragon $cnt;};
		}; #elseif {$percent_hp < 98} {
			#if {$percent_hp < 50} {
				qq;
			}; #else {
				$path_one_step_move;
				surrender;
				exert heal;er;
				exert shield;
				$path_one_step_back;
				#loop 1 $count_dragon cnt {fight dragon $cnt};
			};
		};#elseif {$count_dragon < $dragons_to_fight} {
			start_summon;
		}; #elseif {$current_qn > 80 && $learn_skills == 1 && $practice_needed == 0} {
			$path_from_fight_to_master;
			surrender;
			#if {$abandon_skills == 1} {
				#if {"$weapon_for_fight" == "rake"} {abandon rake;abandon rake};
				#if {"$weapon_for_fight" == "sword"} {abandon sword;abandon sword};
				#if {"$weapon_for_fight" == "bang"} {abandon stick;abandon stick};
				#if {"$weapon_for_fight" == "fork"} {abandon fork;abandon fork};
			};
			#2 learn $skill_to_learn from $master for 10000;
			re;
			#2 learn $skill_to_learn2 from $master for 10000;
			re;
			$path_from_master_to_fight;
			#loop 1 $count_dragon cnt {fight dragon $cnt};
		};  #elseif {$practice_needed == 1} {
			start_practice;
		}; #elseif {$current_nl_percent < 20} {
			#echo {内力过低，需要回复。};
			stop;
			relocate;
		}; 
		
		turn_on_fight_dragon_tick;
				
		#if {$previous_wx > 0} {			
			#math wx_gain {$current_wx - $previous_wx};
			#nop format fight_dragon_status {%t\t%d} {%Y-%m-%d %H:%M:%S} {$wx_gain};
			#nop format filename {logs/fight_dragon_rewards_%s.txt} {$login_id};
			#nop line {log} {$filename} {$fight_dragon_status};
			#format current_timestamp {%t} {%Y-%m-%d %H:%M:%S};
			#system {sqlite3 db/records.db 'insert into fight_dragon_log values("${current_timestamp}","${login_id}","wx_gain","${wx_gain}")'};
			#math previous_wx  {$current_wx};	
		}; #else {
			#math previous_wx {$current_wx};
		};
		
		
		#if {$previous_qn > -1} {			
			#math qn_gain {$current_qn - $previous_qn};
			#format current_timestamp {%t} {%Y-%m-%d %H:%M:%S};
			#system {sqlite3 db/records.db 'insert into fight_dragon_log values("${current_timestamp}","${login_id}","qn_gain","${qn_gain}")'};
			#math previous_qn {$current_qn};
		}; #else {
			#math previous_qn {$current_qn};
		};	
	} {4};
	
	#action {^Successfully summoned a dragon.} {
		#math count_dragon {$count_dragon+1};
		#delay 7 {
			$path_one_step_move;
			surrender;
			$path_one_step_back;
			#loop 1 $count_dragon cnt {fight dragon $cnt;kill dragon $cnt;};
		};
		turn_on_fight_dragon_tick;
		
		#nop format fight_dragon_status {%t\tSummoned a dragon} {%Y-%m-%d %H:%M:%S};
		#nop format filename {logs/fight_dragon_rewards_%s.txt} {$login_id};
		#nop line {log} {$filename} {$fight_dragon_status};
		#format current_timestamp {%t} {%Y-%m-%d %H:%M:%S};
		#system {sqlite3 db/records.db 'insert into fight_dragon_log values("${current_timestamp}","${login_id}","dragon_summoned",NULL)'};	
	};
	
	#prompt {^设定环境变数%*check_dragon_number} {$status_bar_prefix|<fca>Fighting Dragon|目前共$count_dragon只龙|目前武学$current_wx|目前潜能$current_qn|正学习$skill_to_learn} {2};
						
	#action {^%?%?%?%?%*龙%*Dragon} {#math count_dragon {$count_dragon + 1}};
	
	#action {^Failed to summon dragon.} {
		#delay 5 {
			check_dragon_status;
		};
		turn_on_fight_dragon_tick;
	};
	
	#action {^%?%?%?%?你似乎十分疲惫} {
		$path_one_step_move;
		surrender;
		#2 exert heal;
		er;
		re;
		$path_one_step_back;
		#loop 1 $count_dragon cnt {fight dragon $cnt};
	} {4};

	#nop action {^%?%?%?%?你气喘嘘嘘} {
		$path_one_step_move;
		surrender;
		er;
		#path_one_step_back;
		#loop 1 $count_dragon cnt {fight dragon $cnt};
	} {4};

	#action {^%?%?%?%?%?%?%?%?%?%?龙气喘嘘嘘} {
		#if {$heal_dragon == 1} {
			#loop 1 4 cnt {#1 {exert recover dragon $cnt};};
		};
	};
	
	#action {^你要向谁求教？} {
		#format current_timestamp {%t} {%Y-%m-%d %H:%M:%S};
		#system {sqlite3 db/records.db 'insert into fight_dragon_log values("${current_timestamp}","${login_id}","master_absent",NULL)'};	
	};
	
	#action {^%*和你切磋了一会儿%*，你似乎有所领悟。} {
		#format current_timestamp {%t} {%Y-%m-%d %H:%M:%S};
		#nop system {sqlite3 db/records.db 'insert into fight_dragon_log values("${current_timestamp}","${login_id}","learned%%2",NULL)'};
	};
	
	#action {^%?%?%?%?%?%?%你一次输入} {
		#format current_timestamp {%t} {%Y-%m-%d %H:%M:%S};
		#system {sqlite3 db/records.db 'insert into fight_dragon_log values("${current_timestamp}","${login_id}","maxed_out_inpus",NULL)'};	
		stop;
		#ignore actions on;
		#untick fight_dragon;
		#delay 5 {
			#ignore actions off;
			start;
		};
	};
	
	#action {^%?%?%?%?%?看来该找机会逃跑了} {
		#format current_timestamp {%t} {%Y-%m-%d %H:%M:%S};
		#system {sqlite3 db/records.db 'insert into fight_dragon_log values("${current_timestamp}","${login_id}","escaped",NULL)'};	
		random;
		surrender;
		er;
		fly sky;
		stop;
		start_setup;
	};
	
	#action {深深吸了几口气运将过} {#line {gag};};
	
	#class fight_dragon_fight_inner close;
	check_dragon_status;
}

#alias start_practice {
	#if {"$skill_to_practice" == "force"} {
		#class fight_dragon_practice_inner open;
		#action {你的「内功心法」进步了！} {
			unwield $weapon_for_practice;
			wield $weapon_for_fight;
			#untick practice_tick;
			enable force dragonforce;
			tkill fight_dragon_practice_inner;
			er;
			re;
			stop;
			#delay 10 {start};
		};
		
		#action {RELOCATED TO STONE SUCCESSFULLY.} {
			#delay 5 {
				#var weapon_for_practice {sword};
				fly lingshan;
				unwield $weapon_for_fight;
				wield $weapon_for_practice;
				enable force none;
				enable sword liangyi-sword;
				enable parry liangyi-sword;
				#tick practice_tick {practice parry;cast transfer} {1};
			};
		};
		#class fight_dragon_practice_inner close;
		relocate;
	}; #elseif {"$skill_to_practice" == "spells"} {
		#class fight_dragon_practice_inner open;
		#action {RELOCATED TO STONE SUCCESSFULLY.} {
			#delay 5 {
				er;re;xiudao;
			};
		};
		#action {你的「法术」进步了！} {
			tkill fight_dragon_practice_inner;
			#delay 10 {
				er;
				re;
				stop;
				start;
			};
		};
		#class fight_dragon_practice_inner close;
		relocate;
	}; #else {
		#if {"$skill_to_practice" == "unarmed"} {
			unwield $weapon_for_fight;
			enable unarmed none;
		}; #elseif {"$skill_to_practice" == "dodge" || "$skill_to_practice" == "parry"} {
			enable $skill_to_practice none;
		}; #else {
			unwield $weapon_for_fight;
			wield $weapon_for_practice;
			enable $skill_to_practice none;
		}; 
		#class fight_dragon_practice_inner open;
		#action {你的「$skill_to_practice_chinese」进步了！} {
			unwield $weapon_for_practice;
			wield $weapon_for_fight;
			$fight_enables;
			tkill fight_dragon_practice_inner;
		};
		#class fight_dragon_practice_inner close;
	}; 
}

#class fight_dragon close